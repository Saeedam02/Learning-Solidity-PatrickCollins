{
	"id": "bdedc7917527c999e25ab77d942b364e",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.6.7",
	"solcLongVersion": "0.6.7+commit.b8d736ae",
	"input": {
		"language": "Solidity",
		"sources": {
			"SafeMathTester.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.6.0; \n//we can use any version of solidit before 0.8 of solidity.\n//so we can use something like 0.6.7 for our compiler\n\ncontract SafeMathTester{\n    uint8 public bigNumber = 255; // max size of uint8 is 255\n    // if we croos over the limit of number it would just wrap around and start back from the lowest number could be.\n\n    function add() public {\n        bigNumber=bigNumber+1;\n    }\n    // if we come back to solidity 0.8.0 or higher versions, the following function don't work if we call the add function because of the safemath \n    // function add() public {\n    //     bigNumber=bigNumber+1;\n    // }\n\n    // but if we use the unchecked keyword we can change the functionality and again the add function does like version 0.7.6 and bellow \n    // function add() public {\n    //     unchecked{bigNumber=bigNumber+1;}\n    // }\n\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"SafeMathTester.sol": {
				"SafeMathTester": {
					"abi": [
						{
							"inputs": [],
							"name": "add",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "bigNumber",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"SafeMathTester.sol\":172:891  contract SafeMathTester{... */\n  mstore(0x40, 0x80)\n    /* \"SafeMathTester.sol\":226:229  255 */\n  0xff\n    /* \"SafeMathTester.sol\":201:229  uint8 public bigNumber = 255 */\n  0x00\n  dup1\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"SafeMathTester.sol\":172:891  contract SafeMathTester{... */\n  callvalue\n    /* \"--CODEGEN--\":5:14   */\n  dup1\n    /* \"--CODEGEN--\":2:4   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":27:28   */\n  0x00\n    /* \"--CODEGEN--\":24:25   */\n  dup1\n    /* \"--CODEGEN--\":17:29   */\n  revert\n    /* \"--CODEGEN--\":2:4   */\ntag_1:\n    /* \"SafeMathTester.sol\":172:891  contract SafeMathTester{... */\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"SafeMathTester.sol\":172:891  contract SafeMathTester{... */\n      mstore(0x40, 0x80)\n      callvalue\n        /* \"--CODEGEN--\":5:14   */\n      dup1\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_1\n      jumpi\n        /* \"--CODEGEN--\":27:28   */\n      0x00\n        /* \"--CODEGEN--\":24:25   */\n      dup1\n        /* \"--CODEGEN--\":17:29   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_1:\n        /* \"SafeMathTester.sol\":172:891  contract SafeMathTester{... */\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x45964e9e\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x4f2be91f\n      eq\n      tag_4\n      jumpi\n    tag_2:\n        /* \"--CODEGEN--\":12:13   */\n      0x00\n        /* \"--CODEGEN--\":9:10   */\n      dup1\n        /* \"--CODEGEN--\":2:14   */\n      revert\n        /* \"SafeMathTester.sol\":201:229  uint8 public bigNumber = 255 */\n    tag_3:\n      tag_5\n      tag_6\n      jump\t// in\n    tag_5:\n      mload(0x40)\n      dup1\n      dup3\n      0xff\n      and\n      0xff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"SafeMathTester.sol\":382:442  function add() public {... */\n    tag_4:\n      tag_7\n      tag_8\n      jump\t// in\n    tag_7:\n      stop\n        /* \"SafeMathTester.sol\":201:229  uint8 public bigNumber = 255 */\n    tag_6:\n      0x00\n      dup1\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"SafeMathTester.sol\":382:442  function add() public {... */\n    tag_8:\n        /* \"SafeMathTester.sol\":434:435  1 */\n      0x01\n        /* \"SafeMathTester.sol\":424:433  bigNumber */\n      0x00\n      dup1\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"SafeMathTester.sol\":424:435  bigNumber+1 */\n      add\n        /* \"SafeMathTester.sol\":414:423  bigNumber */\n      0x00\n      dup1\n        /* \"SafeMathTester.sol\":414:435  bigNumber=bigNumber+1 */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"SafeMathTester.sol\":382:442  function add() public {... */\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220dc73939f090ca7394babafe67257ab930ea2e070eccf88bc1787d1fbed2db14664736f6c63430006070033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405260ff6000806101000a81548160ff021916908360ff16021790555034801561002b57600080fd5b5060d68061003a6000396000f3fe6080604052348015600f57600080fd5b506004361060325760003560e01c806345964e9e1460375780634f2be91f146059575b600080fd5b603d6061565b604051808260ff1660ff16815260200191505060405180910390f35b605f6073565b005b6000809054906101000a900460ff1681565b60016000809054906101000a900460ff16016000806101000a81548160ff021916908360ff16021790555056fea2646970667358221220dc73939f090ca7394babafe67257ab930ea2e070eccf88bc1787d1fbed2db14664736f6c63430006070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0xFF PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP CALLVALUE DUP1 ISZERO PUSH2 0x2B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xD6 DUP1 PUSH2 0x3A PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x32 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x45964E9E EQ PUSH1 0x37 JUMPI DUP1 PUSH4 0x4F2BE91F EQ PUSH1 0x59 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3D PUSH1 0x61 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x5F PUSH1 0x73 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ADD PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDC PUSH20 0x939F090CA7394BABAFE67257AB930EA2E070ECCF DUP9 0xBC OR DUP8 0xD1 0xFB 0xED 0x2D 0xB1 CHAINID PUSH5 0x736F6C6343 STOP MOD SMOD STOP CALLER ",
							"sourceMap": "172:719:0:-:0;;;226:3;201:28;;;;;;;;;;;;;;;;;;;;172:719;5:9:-1;2:2;;;27:1;24;17:12;2:2;172:719:0;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b506004361060325760003560e01c806345964e9e1460375780634f2be91f146059575b600080fd5b603d6061565b604051808260ff1660ff16815260200191505060405180910390f35b605f6073565b005b6000809054906101000a900460ff1681565b60016000809054906101000a900460ff16016000806101000a81548160ff021916908360ff16021790555056fea2646970667358221220dc73939f090ca7394babafe67257ab930ea2e070eccf88bc1787d1fbed2db14664736f6c63430006070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x32 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x45964E9E EQ PUSH1 0x37 JUMPI DUP1 PUSH4 0x4F2BE91F EQ PUSH1 0x59 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3D PUSH1 0x61 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x5F PUSH1 0x73 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ADD PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDC PUSH20 0x939F090CA7394BABAFE67257AB930EA2E070ECCF DUP9 0xBC OR DUP8 0xD1 0xFB 0xED 0x2D 0xB1 CHAINID PUSH5 0x736F6C6343 STOP MOD SMOD STOP CALLER ",
							"sourceMap": "172:719:0:-:0;;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;172:719:0;;;;;;;;;;;;;;;;;;;;;12:1:-1;9;2:12;201:28:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;382:60;;;:::i;:::-;;201:28;;;;;;;;;;;;;:::o;382:60::-;434:1;424:9;;;;;;;;;;;:11;414:9;;:21;;;;;;;;;;;;;;;;;;382:60::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "42800",
								"executionCost": "20960",
								"totalCost": "63760"
							},
							"external": {
								"add()": "21853",
								"bigNumber()": "1031"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 172,
									"end": 891,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 172,
									"end": 891,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 172,
									"end": 891,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 226,
									"end": 229,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 201,
									"end": 229,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 201,
									"end": 229,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 201,
									"end": 229,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 201,
									"end": 229,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 201,
									"end": 229,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 201,
									"end": 229,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 201,
									"end": 229,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 201,
									"end": 229,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 201,
									"end": 229,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 201,
									"end": 229,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 201,
									"end": 229,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 201,
									"end": 229,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 201,
									"end": 229,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 201,
									"end": 229,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 201,
									"end": 229,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 201,
									"end": 229,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 201,
									"end": 229,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 201,
									"end": 229,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 201,
									"end": 229,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 201,
									"end": 229,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 172,
									"end": 891,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 5,
									"end": 14,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 2,
									"end": 4,
									"name": "ISZERO",
									"source": -1
								},
								{
									"begin": 2,
									"end": 4,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "1"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "JUMPI",
									"source": -1
								},
								{
									"begin": 27,
									"end": 28,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 24,
									"end": 25,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 17,
									"end": 29,
									"name": "REVERT",
									"source": -1
								},
								{
									"begin": 2,
									"end": 4,
									"name": "tag",
									"source": -1,
									"value": "1"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 172,
									"end": 891,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 172,
									"end": 891,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 172,
									"end": 891,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 172,
									"end": 891,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 172,
									"end": 891,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 172,
									"end": 891,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 172,
									"end": 891,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 172,
									"end": 891,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220dc73939f090ca7394babafe67257ab930ea2e070eccf88bc1787d1fbed2db14664736f6c63430006070033",
									".code": [
										{
											"begin": 172,
											"end": 891,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 172,
											"end": 891,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 172,
											"end": 891,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 172,
											"end": 891,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 5,
											"end": 14,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 27,
											"end": 28,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 24,
											"end": 25,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 17,
											"end": 29,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 172,
											"end": 891,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 172,
											"end": 891,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 172,
											"end": 891,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 172,
											"end": 891,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 172,
											"end": 891,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 172,
											"end": 891,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 172,
											"end": 891,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 172,
											"end": 891,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 172,
											"end": 891,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 172,
											"end": 891,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 172,
											"end": 891,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 172,
											"end": 891,
											"name": "PUSH",
											"source": 0,
											"value": "45964E9E"
										},
										{
											"begin": 172,
											"end": 891,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 172,
											"end": 891,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 172,
											"end": 891,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 172,
											"end": 891,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 172,
											"end": 891,
											"name": "PUSH",
											"source": 0,
											"value": "4F2BE91F"
										},
										{
											"begin": 172,
											"end": 891,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 172,
											"end": 891,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 172,
											"end": 891,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 172,
											"end": 891,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 172,
											"end": 891,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12,
											"end": 13,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 9,
											"end": 10,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 2,
											"end": 14,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 201,
											"end": 229,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 201,
											"end": 229,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 201,
											"end": 229,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 201,
											"end": 229,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 201,
											"end": 229,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 201,
											"end": 229,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 201,
											"end": 229,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 201,
											"end": 229,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 201,
											"end": 229,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 201,
											"end": 229,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 201,
											"end": 229,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 201,
											"end": 229,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 201,
											"end": 229,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 201,
											"end": 229,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 201,
											"end": 229,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 201,
											"end": 229,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 201,
											"end": 229,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 201,
											"end": 229,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 201,
											"end": 229,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 201,
											"end": 229,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 201,
											"end": 229,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 201,
											"end": 229,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 201,
											"end": 229,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 201,
											"end": 229,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 201,
											"end": 229,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 201,
											"end": 229,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 201,
											"end": 229,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 201,
											"end": 229,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 201,
											"end": 229,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 382,
											"end": 442,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 382,
											"end": 442,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 382,
											"end": 442,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 382,
											"end": 442,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 382,
											"end": 442,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 382,
											"end": 442,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 382,
											"end": 442,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 382,
											"end": 442,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 201,
											"end": 229,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 201,
											"end": 229,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 201,
											"end": 229,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 201,
											"end": 229,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 201,
											"end": 229,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 201,
											"end": 229,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 201,
											"end": 229,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 201,
											"end": 229,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 201,
											"end": 229,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 201,
											"end": 229,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 201,
											"end": 229,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 201,
											"end": 229,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 201,
											"end": 229,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 201,
											"end": 229,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 201,
											"end": 229,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 382,
											"end": 442,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 382,
											"end": 442,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 434,
											"end": 435,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 424,
											"end": 433,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 424,
											"end": 433,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 424,
											"end": 433,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 424,
											"end": 433,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 424,
											"end": 433,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 424,
											"end": 433,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 424,
											"end": 433,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 424,
											"end": 433,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 424,
											"end": 433,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 424,
											"end": 433,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 424,
											"end": 433,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 424,
											"end": 435,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 414,
											"end": 423,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 414,
											"end": 423,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 414,
											"end": 435,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 414,
											"end": 435,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 414,
											"end": 435,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 414,
											"end": 435,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 414,
											"end": 435,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 414,
											"end": 435,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 414,
											"end": 435,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 414,
											"end": 435,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 414,
											"end": 435,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 414,
											"end": 435,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 414,
											"end": 435,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 414,
											"end": 435,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 414,
											"end": 435,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 414,
											"end": 435,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 414,
											"end": 435,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 414,
											"end": 435,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 414,
											"end": 435,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 414,
											"end": 435,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 382,
											"end": 442,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"add()": "4f2be91f",
							"bigNumber()": "45964e9e"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.7+commit.b8d736ae\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"add\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"bigNumber\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"SafeMathTester.sol\":\"SafeMathTester\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"SafeMathTester.sol\":{\"keccak256\":\"0x2635bb78eefe62b78114ab57bf203b468ff49bb91815485c5dbbf6d57bc2b811\",\"urls\":[\"bzz-raw://f872bdd98a397605b2e5e957772113ae15b58b5e595273423c458ebc95373b27\",\"dweb:/ipfs/QmPnUAepLs9XbUncwpkW7aFCTRauxy9h7bn41FbK6asnL8\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 4,
								"contract": "SafeMathTester.sol:SafeMathTester",
								"label": "bigNumber",
								"offset": 0,
								"slot": "0",
								"type": "t_uint8"
							}
						],
						"types": {
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"methods": {}
					}
				}
			}
		},
		"sources": {
			"SafeMathTester.sol": {
				"ast": {
					"absolutePath": "SafeMathTester.sol",
					"exportedSymbols": {
						"SafeMathTester": [
							15
						]
					},
					"id": 16,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 15,
							"linearizedBaseContracts": [
								15
							],
							"name": "SafeMathTester",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "45964e9e",
									"id": 4,
									"mutability": "mutable",
									"name": "bigNumber",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 15,
									"src": "201:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 2,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "201:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "323535",
										"id": 3,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "226:3:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_255_by_1",
											"typeString": "int_const 255"
										},
										"value": "255"
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 13,
										"nodeType": "Block",
										"src": "404:38:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 11,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 7,
														"name": "bigNumber",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4,
														"src": "414:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"id": 10,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 8,
															"name": "bigNumber",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4,
															"src": "424:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"argumentTypes": null,
															"hexValue": "31",
															"id": 9,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "434:1:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "424:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "414:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 12,
												"nodeType": "ExpressionStatement",
												"src": "414:21:0"
											}
										]
									},
									"documentation": null,
									"functionSelector": "4f2be91f",
									"id": 14,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "394:2:0"
									},
									"returnParameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "404:0:0"
									},
									"scope": 15,
									"src": "382:60:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 16,
							"src": "172:719:0"
						}
					],
					"src": "32:859:0"
				},
				"id": 0
			}
		}
	}
}